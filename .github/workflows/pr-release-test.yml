name: PR Release Test

on:
  pull_request:
    branches: [ main ]
    paths:
      - '.goreleaser.yml'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.github/workflows/release.yml'
      - '.github/workflows/pr-release-test.yml'

permissions:
  contents: read
  packages: write

jobs:
  test-release:
    name: Test Release Process
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Add variables to environment file
      run: cat ".github/env" >> "$GITHUB_ENV"

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install Protocol Buffers compiler
      run: |
        sudo apt-get update && sudo apt-get install -y protobuf-compiler

    - name: Setup development environment
      run: go run dev.go dev-setup

    - name: Build dashboard
      run: |
        go run dev.go dashboard install
        go run dev.go dashboard build --production

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Test GoReleaser build (snapshot)
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: build --snapshot --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test Docker build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: false
        load: true
        tags: webhook-bridge:pr-test
        build-args: |
          VERSION=pr-test
          GIT_COMMIT=${{ github.sha }}
          BUILD_DATE=${{ github.event.pull_request.updated_at }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Verify artifacts
      run: |
        echo "🔍 Verifying build artifacts..."

        # Check GoReleaser artifacts
        if ls dist/webhook-bridge_* 1> /dev/null 2>&1; then
          echo "✅ GoReleaser binary artifacts found"
          ls -la dist/webhook-bridge_*
        else
          echo "❌ No GoReleaser binary artifacts found"
          exit 1
        fi

        # Test Docker image
        echo "📋 Available Docker images:"
        docker images

        if docker images | grep -q webhook-bridge; then
          echo "✅ Docker image built successfully"

          # Test basic container functionality
          echo "🧪 Testing container startup..."
          docker run --rm -d --name test-container -p 8080:8000 webhook-bridge:pr-test &
          CONTAINER_PID=$!

          # Wait briefly and check if container is running
          sleep 5
          if docker ps | grep -q test-container; then
            echo "✅ Container started successfully"
            docker stop test-container || true
          else
            echo "⚠️ Container startup test skipped (may need more time)"
          fi
        else
          echo "❌ Docker image not found"
          exit 1
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pr-release-test-artifacts
        path: dist/
        retention-days: 7
