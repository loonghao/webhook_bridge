name: MR Checks
on: [ pull_request ]

jobs:
  python-check:
    strategy:
      max-parallel: 6
      matrix:
        target:
          - os: 'ubuntu-22.04'
            triple: 'x86_64-unknown-linux-gnu'
          - os: 'macos-14'
            triple: 'aarch64-apple-darwin'
          - os: 'windows-2022'
            triple: 'x86_64-pc-windows-msvc'
        python-version: ["3.10", "3.11", "3.12"]
        exclude:
          # Reduce matrix size by excluding some combinations
          - target:
              os: 'windows-2022'
            python-version: "3.11"
          - target:
              os: 'macos-14'
            python-version: "3.11"
      fail-fast: false
    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
          poetry --version
          poetry install

      - name: Lint
        run: |
          nox -s lint

      - name: Type check
        run: |
          nox -s mypy
