{
	"runs": [
		{
			"results": [
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\config\\config.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 170,
									"snippet": {
										"text": "data, err := os.ReadFile(path)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 170
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\start.go"
								},
								"region": {
									"endColumn": 21,
									"endLine": 333,
									"snippet": {
										"text": "sourceFile, err := os.ReadFile(src)"
									},
									"sourceLanguage": "go",
									"startColumn": 21,
									"startLine": 333
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\server\\server.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 554,
									"snippet": {
										"text": "hs.server = \u0026http.Server{\nAddr:    hs.Config.GetServerAddress(),\nHandler: hs.Router,\n}\n"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 551
								}
							}
						}
					],
					"message": {
						"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
					},
					"ruleId": "G112"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\serve.go"
								},
								"region": {
									"endColumn": 17,
									"endLine": 94,
									"snippet": {
										"text": "httpServer := \u0026http.Server{\nAddr:    cfg.GetServerAddress(),\nHandler: router,\n}\n"
									},
									"sourceLanguage": "go",
									"startColumn": 17,
									"startLine": 91
								}
							}
						}
					],
					"message": {
						"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
					},
					"ruleId": "G112"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\cmd\\server\\main.go"
								},
								"region": {
									"endColumn": 17,
									"endLine": 63,
									"snippet": {
										"text": "httpServer := \u0026http.Server{\nAddr:    cfg.GetServerAddress(),\nHandler: router,\n}\n"
									},
									"sourceLanguage": "go",
									"startColumn": 17,
									"startLine": 60
								}
							}
						}
					],
					"message": {
						"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
					},
					"ruleId": "G112"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\tools\\dev\\main.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 120,
									"snippet": {
										"text": "if err := os.MkdirAll(\"api/proto\", 0755); err != nil {"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 120
								}
							}
						}
					],
					"message": {
						"text": "Expect directory permissions to be 0750 or less"
					},
					"ruleId": "G301",
					"ruleIndex": 1
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\logging\\manager.go"
								},
								"region": {
									"endColumn": 13,
									"endLine": 57,
									"snippet": {
										"text": "if err := os.MkdirAll(logDir, 0755); err != nil {"
									},
									"sourceLanguage": "go",
									"startColumn": 13,
									"startLine": 57
								}
							}
						}
					],
					"message": {
						"text": "Expect directory permissions to be 0750 or less"
					},
					"ruleId": "G301",
					"ruleIndex": 1
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\config\\directories.go"
								},
								"region": {
									"endColumn": 13,
									"endLine": 123,
									"snippet": {
										"text": "if err := os.MkdirAll(path, 0755); err != nil {"
									},
									"sourceLanguage": "go",
									"startColumn": 13,
									"startLine": 123
								}
							}
						}
					],
					"message": {
						"text": "Expect directory permissions to be 0750 or less"
					},
					"ruleId": "G301",
					"ruleIndex": 1
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\build.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 39,
									"snippet": {
										"text": "if err := os.MkdirAll(buildDir, 0755); err != nil {"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 39
								}
							}
						}
					],
					"message": {
						"text": "Expect directory permissions to be 0750 or less"
					},
					"ruleId": "G301",
					"ruleIndex": 1
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\config\\manager.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 241,
									"snippet": {
										"text": "if err := os.WriteFile(testFile, []byte(\"test\"), 0644); err != nil {"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 241
								}
							}
						}
					],
					"message": {
						"text": "Expect WriteFile permissions to be 0600 or less"
					},
					"ruleId": "G306"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\config\\manager.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 192,
									"snippet": {
										"text": "if err := os.WriteFile(configPath, []byte(yamlContent), 0644); err != nil {"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 192
								}
							}
						}
					],
					"message": {
						"text": "Expect WriteFile permissions to be 0600 or less"
					},
					"ruleId": "G306"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\config\\directories.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 185,
									"snippet": {
										"text": "if err := os.WriteFile(testFile, []byte(\"test\"), 0644); err != nil {"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 185
								}
							}
						}
					],
					"message": {
						"text": "Expect WriteFile permissions to be 0600 or less"
					},
					"ruleId": "G306"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\start.go"
								},
								"region": {
									"endColumn": 9,
									"endLine": 338,
									"snippet": {
										"text": "return os.WriteFile(dst, sourceFile, 0644)"
									},
									"sourceLanguage": "go",
									"startColumn": 9,
									"startLine": 338
								}
							}
						}
					],
					"message": {
						"text": "Expect WriteFile permissions to be 0600 or less"
					},
					"ruleId": "G306"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\api\\proto\\webhook.pb.go"
								},
								"region": {
									"endColumn": 19,
									"endLine": 689,
									"snippet": {
										"text": "RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_webhook_proto_rawDesc), len(file_api_proto_webhook_proto_rawDesc)),"
									},
									"sourceLanguage": "go",
									"startColumn": 19,
									"startLine": 689
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\api\\proto\\webhook.pb.go"
								},
								"region": {
									"endColumn": 32,
									"endLine": 689,
									"snippet": {
										"text": "RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_webhook_proto_rawDesc), len(file_api_proto_webhook_proto_rawDesc)),"
									},
									"sourceLanguage": "go",
									"startColumn": 32,
									"startLine": 689
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\api\\proto\\webhook.pb.go"
								},
								"region": {
									"endColumn": 71,
									"endLine": 637,
									"snippet": {
										"text": "file_api_proto_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_webhook_proto_rawDesc), len(file_api_proto_webhook_proto_rawDesc)))"
									},
									"sourceLanguage": "go",
									"startColumn": 71,
									"startLine": 637
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\api\\proto\\webhook.pb.go"
								},
								"region": {
									"endColumn": 84,
									"endLine": 637,
									"snippet": {
										"text": "file_api_proto_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_webhook_proto_rawDesc), len(file_api_proto_webhook_proto_rawDesc)))"
									},
									"sourceLanguage": "go",
									"startColumn": 84,
									"startLine": 637
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\tools\\dev\\main.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 234,
									"snippet": {
										"text": "os.RemoveAll(dir)"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 234
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\tools\\dev\\main.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 225,
									"snippet": {
										"text": "os.Remove(match)"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 225
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\utils\\ports.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 42,
									"snippet": {
										"text": "conn.Close()"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 42
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 363,
									"snippet": {
										"text": "logger.Errorf(\"Service run error: %v\", err)"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 363
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 142,
									"snippet": {
										"text": "s.logger.Infof(\"Worker pool started with %d workers\", s.workerPool.Size())"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 142
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 141,
									"snippet": {
										"text": "s.logger.Infof(\"Webhook bridge service running on %s\", s.config.GetServerAddress())"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 141
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 135,
									"snippet": {
										"text": "s.logger.Errorf(\"Failed to start HTTP server: %v\", err)"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 135
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 116,
									"snippet": {
										"text": "s.logger.Info(\"Server will start in API-only mode\")"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 116
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 115,
									"snippet": {
										"text": "s.logger.Warningf(\"Failed to connect to Python executor: %v\", err)"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 115
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 101,
									"snippet": {
										"text": "s.logger.Info(\"Webhook bridge service stopped\")"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 101
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 97,
									"snippet": {
										"text": "s.server.Stop()"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 97
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 84,
									"snippet": {
										"text": "s.logger.Info(\"Stopping webhook bridge service...\")"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 84
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\service\\service.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 73,
									"snippet": {
										"text": "s.logger.Info(\"Starting webhook bridge service...\")"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 73
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\grpc\\client.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 84,
									"snippet": {
										"text": "c.conn.Close()"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 84
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\config\\manager.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 244,
									"snippet": {
										"text": "os.Remove(testFile) // Clean up"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 244
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\config\\directories.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 188,
									"snippet": {
										"text": "os.Remove(testFile) // Clean up"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 188
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\start.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 464,
									"snippet": {
										"text": "pythonCmd.Process.Kill()"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 464
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\start.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 164,
									"snippet": {
										"text": "goCmd.Process.Kill()"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 164
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\start.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 150,
									"snippet": {
										"text": "pythonCmd.Process.Kill()"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 150
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\commands.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 381,
									"snippet": {
										"text": "openBrowser(dashboardURL)"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 381
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\commands.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 359,
									"snippet": {
										"text": "goCmd.Process.Kill()"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 359
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\commands.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 345,
									"snippet": {
										"text": "pythonCmd.Process.Kill()"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 345
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\commands.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 205,
									"snippet": {
										"text": "exec.Command(\"go\", \"tool\", \"cover\", \"-html=coverage.out\", \"-o\", \"coverage.html\").Run()"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 205
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "C:\\github\\webhook_bridge\\internal\\cli\\commands.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 139,
									"snippet": {
										"text": "exec.Command(\"go\", \"clean\", \"-cache\").Run()"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 139
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				}
			],
			"taxonomies": [
				{
					"downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.4.xml.zip",
					"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
					"informationUri": "https://cwe.mitre.org/data/published/cwe_v4.4.pdf/",
					"isComprehensive": true,
					"language": "en",
					"minimumRequiredLocalizedDataSemanticVersion": "4.4",
					"name": "CWE",
					"organization": "MITRE",
					"releaseDateUtc": "2021-03-15",
					"shortDescription": {
						"text": "The MITRE Common Weakness Enumeration"
					},
					"taxa": [
						{
							"fullDescription": {
								"text": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."
							},
							"guid": "3e718404-88bc-3f17-883e-e85e74078a76",
							"helpUri": "https://cwe.mitre.org/data/definitions/22.html",
							"id": "22",
							"shortDescription": {
								"text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
							}
						},
						{
							"fullDescription": {
								"text": "The program calls a function that can never be guaranteed to work safely."
							},
							"guid": "b5fcdc26-1906-39a8-aa7f-04cbe2339bce",
							"helpUri": "https://cwe.mitre.org/data/definitions/242.html",
							"id": "242",
							"shortDescription": {
								"text": "Use of Inherently Dangerous Function"
							}
						},
						{
							"fullDescription": {
								"text": "During installation, installed file permissions are set to allow anyone to modify those files."
							},
							"guid": "fca8970d-b44c-3162-a385-cc09266d12a4",
							"helpUri": "https://cwe.mitre.org/data/definitions/276.html",
							"id": "276",
							"shortDescription": {
								"text": "Incorrect Default Permissions"
							}
						},
						{
							"fullDescription": {
								"text": "The software does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources."
							},
							"guid": "5d980950-93cd-3caf-9057-858ec3c28877",
							"helpUri": "https://cwe.mitre.org/data/definitions/400.html",
							"id": "400",
							"shortDescription": {
								"text": "Uncontrolled Resource Consumption"
							}
						},
						{
							"fullDescription": {
								"text": "The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software."
							},
							"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
							"helpUri": "https://cwe.mitre.org/data/definitions/703.html",
							"id": "703",
							"shortDescription": {
								"text": "Improper Check or Handling of Exceptional Conditions"
							}
						}
					],
					"version": "4.4"
				}
			],
			"tool": {
				"driver": {
					"guid": "8b518d5f-906d-39f9-894b-d327b1a421c5",
					"informationUri": "https://github.com/securego/gosec/",
					"name": "gosec",
					"rules": [
						{
							"defaultConfiguration": {
								"level": "warning"
							},
							"fullDescription": {
								"text": "Use of unsafe calls should be audited"
							},
							"help": {
								"text": "Use of unsafe calls should be audited\nSeverity: LOW\nConfidence: HIGH\n"
							},
							"id": "G103",
							"name": "Use of Inherently Dangerous Function",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"LOW"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "b5fcdc26-1906-39a8-aa7f-04cbe2339bce",
										"id": "242",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Use of unsafe calls should be audited"
							}
						},
						{
							"defaultConfiguration": {
								"level": "warning"
							},
							"fullDescription": {
								"text": "Errors unhandled"
							},
							"help": {
								"text": "Errors unhandled\nSeverity: LOW\nConfidence: HIGH\n"
							},
							"id": "G104",
							"name": "Improper Check or Handling of Exceptional Conditions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"LOW"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
										"id": "703",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Errors unhandled"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Expect WriteFile permissions to be 0600 or less"
							},
							"help": {
								"text": "Expect WriteFile permissions to be 0600 or less\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G306",
							"name": "Incorrect Default Permissions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "fca8970d-b44c-3162-a385-cc09266d12a4",
										"id": "276",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Expect WriteFile permissions to be 0600 or less"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
							},
							"help": {
								"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server\nSeverity: MEDIUM\nConfidence: LOW\n"
							},
							"id": "G112",
							"name": "Uncontrolled Resource Consumption",
							"properties": {
								"precision": "low",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "5d980950-93cd-3caf-9057-858ec3c28877",
										"id": "400",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Expect directory permissions to be 0750 or less"
							},
							"help": {
								"text": "Expect directory permissions to be 0750 or less\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G301",
							"name": "Incorrect Default Permissions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "fca8970d-b44c-3162-a385-cc09266d12a4",
										"id": "276",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Expect directory permissions to be 0750 or less"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Potential file inclusion via variable"
							},
							"help": {
								"text": "Potential file inclusion via variable\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G304",
							"name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "3e718404-88bc-3f17-883e-e85e74078a76",
										"id": "22",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Potential file inclusion via variable"
							}
						}
					],
					"semanticVersion": "dev",
					"supportedTaxonomies": [
						{
							"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
							"name": "CWE"
						}
					],
					"version": "dev"
				}
			}
		}
	],
	"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
	"version": "2.1.0"
}